
import { useState } from "react";
import { Download, Share2, Instagram, Twitter, Facebook } from "lucide-react";
import { toast } from "sonner";

interface ResultDisplayProps {
  originalImage: string;
  processedImage: string;
  onReset: () => void;
}

export default function ResultDisplay({ 
  originalImage, 
  processedImage, 
  onReset 
}: ResultDisplayProps) {
  const [showOriginal, setShowOriginal] = useState(false);

  const handleDownload = () => {
    // Create a temporary link element
    const link = document.createElement("a");
    link.href = processedImage;
    link.download = "lastNurses_transformed.jpg";
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    
    toast.success("Image downloaded successfully");
  };

  const handleShare = (platform: string) => {
    // In a real app, we would have shareable URLs
    // For now, just show a toast message
    toast.success(`Sharing to ${platform}...`);
    
    // Here we would open the platform's share dialog
    let shareUrl = "https://thelastnurses.com/share/";
    let shareText = "Generated by thelastnurses.com, a creation of ";
    
    switch (platform) {
      case "Instagram":
        shareText += "@replacern";
        // In reality, Instagram sharing would need to be handled differently
        // as direct URL sharing isn't supported
        toast("Opening Instagram...");
        break;
      case "Twitter":
        shareText += "@ReplaceRN";
        // window.open(`https://twitter.com/intent/tweet?url=${shareUrl}&text=${shareText}`);
        break;
      case "Facebook":
        shareText += "replacern";
        // window.open(`https://www.facebook.com/sharer/sharer.php?u=${shareUrl}`);
        break;
    }
  };

  return (
    <div className="text-center">
      <h3 className="text-xl text-white mb-4">Transformation Complete!</h3>
      
      <div className="flex flex-col md:flex-row gap-6 max-w-3xl mx-auto mb-8">
        <div className="flex-1 relative glass rounded-lg overflow-hidden">
          <img 
            src={showOriginal ? originalImage : processedImage} 
            alt={showOriginal ? "Original Image" : "Transformed Image"} 
            className="w-full h-auto object-contain"
          />
          
          {/* Before/After Toggle */}
          <button
            className="absolute bottom-4 left-1/2 transform -translate-x-1/2 px-4 py-2 bg-apocalypse-darkgray/90 hover:bg-apocalypse-darkgray text-white text-sm rounded-full backdrop-blur-sm transition-colors"
            onClick={() => setShowOriginal(!showOriginal)}
          >
            {showOriginal ? "Show Transformed" : "Show Original"}
          </button>
        </div>
      </div>
      
      <div className="flex flex-wrap justify-center gap-4 mb-8">
        <button
          onClick={handleDownload}
          className="px-4 py-2 bg-apocalypse-darkgray hover:bg-apocalypse-gray text-white rounded-md transition-colors flex items-center space-x-2"
        >
          <Download size={16} />
          <span>Download</span>
        </button>
        
        <button
          onClick={() => handleShare("Instagram")}
          className="px-4 py-2 bg-apocalypse-darkgray hover:bg-[#E1306C]/80 text-white rounded-md transition-colors flex items-center space-x-2"
        >
          <Instagram size={16} />
          <span>Instagram</span>
        </button>
        
        <button
          onClick={() => handleShare("Twitter")}
          className="px-4 py-2 bg-apocalypse-darkgray hover:bg-[#1DA1F2]/80 text-white rounded-md transition-colors flex items-center space-x-2"
        >
          <Twitter size={16} />
          <span>Twitter</span>
        </button>
        
        <button
          onClick={() => handleShare("Facebook")}
          className="px-4 py-2 bg-apocalypse-darkgray hover:bg-[#4267B2]/80 text-white rounded-md transition-colors flex items-center space-x-2"
        >
          <Facebook size={16} />
          <span>Facebook</span>
        </button>
      </div>
      
      <button
        onClick={onReset}
        className="px-6 py-2 bg-apocalypse-green/80 hover:bg-apocalypse-green text-black rounded-md transition-colors font-medium"
      >
        Transform Another Image
      </button>
    </div>
  );
}
